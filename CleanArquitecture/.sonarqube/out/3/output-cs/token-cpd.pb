Ø
ZC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Email\EmailService.cs
	namespace		 	
CleanArchitecture		
 
.		 
Infraestructure		 +
.		+ ,
Email		, 1
{

 
public 

class 
EmailService 
: 
IEmailService +
{ 
public 
EmailSettings 
_emailSettings +
{, -
get. 1
;1 2
}3 4
public 
ILogger 
< 
EmailService #
># $
_logger% ,
{- .
get/ 2
;2 3
}4 5
public 
EmailService 
( 
IOptions $
<$ %
EmailSettings% 2
>2 3
emailSettings4 A
,A B
ILoggerC J
<J K
EmailServiceK W
>W X
loggerY _
)_ `
{ 	
_emailSettings 
= 
emailSettings *
.* +
Value+ 0
;0 1
_logger 
= 
logger 
; 
} 	
public 
async 
Task 
< 
bool 
> 
	SendEmail  )
() *
Application* 5
.5 6
Models6 <
.< =
Email= B
emailC H
)H I
{ 	
var 
client 
= 
new 
SendGridClient +
(+ ,
_emailSettings, :
.: ;
ApiKey; A
)A B
;B C
var 
subject 
= 
email 
.  
Subject  '
;' (
var 
to 
= 
new 
EmailAddress %
(% &
email& +
.+ ,
To, .
). /
;/ 0
var 
body 
= 
email 
. 
Body !
;! "
var 
from 
= 
new 
EmailAddress '
(' (
)( )
{ 
Email   
=   
_emailSettings   &
.  & '
FromAddress  ' 2
,  2 3
Name!! 
=!! 
_emailSettings!! %
.!!% &
FromName!!& .
}"" 
;"" 
var$$ 
sendGridMessage$$ 
=$$  !

MailHelper$$" ,
.$$, -
CreateSingleEmail$$- >
($$> ?
from$$? C
,$$C D
to$$E G
,$$G H
subject$$I P
,$$P Q
body$$R V
,$$V W
body$$X \
)$$\ ]
;$$] ^
var%% 
response%% 
=%% 
await%%  
client%%! '
.%%' (
SendEmailAsync%%( 6
(%%6 7
sendGridMessage%%7 F
)%%F G
;%%G H
if&& 
(&& 
response&& 
.&& 

StatusCode&& "
==&&# %
System&&& ,
.&&, -
Net&&- 0
.&&0 1
HttpStatusCode&&1 ?
.&&? @
Accepted&&@ H
||&&I K
response'' 
.'' 

StatusCode'' #
==''$ &
System''' -
.''- .
Net''. 1
.''1 2
HttpStatusCode''2 @
.''@ A
OK''A C
)''C D
{(( 
return)) 
true)) 
;)) 
}** 
_logger++ 
.++ 
LogError++ 
(++ 
$str++ I
)++I J
;++J K
return,, 
false,, 
;,, 
}-- 	
}.. 
}// É
jC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\InfraestructureServiceRegistration.cs
	namespace 	
CleanArchitecture
 
. 
Infraestructure +
{ 
public 

static 
class .
"InfraestructureServiceRegistration :
{ 
public 
static 
IServiceCollection (&
AddInfraestructureServices) C
(C D
thisD H
IServiceCollectionI [
services\ d
,d e
IConfiguration 
configuration (
)( )
{ 	
services 
. 
AddDbContext !
<! "
StreamerDbContext" 3
>3 4
(4 5
options5 <
=>= ?
options 
. 
UseSqlServer $
($ %
configuration% 2
.2 3
GetConnectionString3 F
(F G
$strG Y
)Y Z
)Z [
) 
; 
services 
. 
	AddScoped 
< 
IUnitOfWork *
,* +

UnitOfWork, 6
>6 7
(7 8
)8 9
;9 :
services 
. 
	AddScoped 
( 
typeof %
(% &
IAsyncRepository& 6
<6 7
>7 8
)8 9
,9 :
typeof; A
(A B
RepositoryBaseB P
<P Q
>Q R
)R S
)S T
;T U
services 
. 
	AddScoped 
< 
IVideoRepository /
,/ 0
VideoRepository1 @
>@ A
(A B
)B C
;C D
services 
. 
	AddScoped 
< 
IStreamerRepository 2
,2 3
StreamerRepository4 F
>F G
(G H
)H I
;I J
services 
. 
	Configure 
< 
EmailSettings ,
>, -
(- .
c. /
=>0 2
configuration3 @
.@ A

GetSectionA K
(K L
$strL [
)[ \
)\ ]
;] ^
services 
. 
AddTransient !
<! "
IEmailService" /
,/ 0
EmailService1 =
>= >
(> ?
)? @
;@ A
return   
services   
;   
}"" 	
}## 
}$$ ¹)
rC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Migrations\20220811025606_MigracionInicial.cs
	namespace 	
CleanArchitecture
 
. 
Data  
.  !

Migrations! +
{ 
public 

partial 
class 
MigracionInicial )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
CreateTable		 (
(		( )
name

 
:

 
$str

 !
,

! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
trueS W
)W X
,X Y
Url 
= 
table 
.  
Column  &
<& '
string' -
>- .
(. /
type/ 3
:3 4
$str5 D
,D E
nullableF N
:N O
trueP T
)T U
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
trueS W
)W X
,X Y

StreamerId 
=  
table! &
.& '
Column' -
<- .
int. 1
>1 2
(2 3
type3 7
:7 8
$str9 >
,> ?
nullable@ H
:H I
falseJ O
)O P
} 
, 
constraints   
:   
table   "
=>  # %
{!! 
table"" 
."" 

PrimaryKey"" $
(""$ %
$str""% 0
,""0 1
x""2 3
=>""4 6
x""7 8
.""8 9
Id""9 ;
)""; <
;""< =
table## 
.## 

ForeignKey## $
(##$ %
name$$ 
:$$ 
$str$$ >
,$$> ?
column%% 
:%% 
x%%  !
=>%%" $
x%%% &
.%%& '

StreamerId%%' 1
,%%1 2
principalTable&& &
:&&& '
$str&&( 3
,&&3 4
principalColumn'' '
:''' (
$str'') -
,''- .
onDelete((  
:((  !
ReferentialAction((" 3
.((3 4
Cascade((4 ;
)((; <
;((< =
})) 
))) 
;)) 
migrationBuilder++ 
.++ 
CreateIndex++ (
(++( )
name,, 
:,, 
$str,, ,
,,,, -
table-- 
:-- 
$str-- 
,--  
column.. 
:.. 
$str.. $
)..$ %
;..% &
}// 	
	protected11 
override11 
void11 
Down11  $
(11$ %
MigrationBuilder11% 5
migrationBuilder116 F
)11F G
{22 	
migrationBuilder33 
.33 
	DropTable33 &
(33& '
name44 
:44 
$str44 
)44 
;44  
migrationBuilder66 
.66 
	DropTable66 &
(66& '
name77 
:77 
$str77 !
)77! "
;77" #
}88 	
}99 
}:: P
C:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Migrations\20220910223207_agregar-tablas-entidad-relacion.cs
	namespace 	
CleanArchitecture
 
. 
Data  
.  !

Migrations! +
{ 
public 

partial 
class (
agregartablasentidadrelacion 5
:6 7
	Migration8 A
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 6
,6 7
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
trueS W
)W X
,X Y
Apellido 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
Id8 :
): ;
;; <
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{   
Id!! 
=!! 
table!! 
.!! 
Column!! %
<!!% &
int!!& )
>!!) *
(!!* +
type!!+ /
:!!/ 0
$str!!1 6
,!!6 7
nullable!!8 @
:!!@ A
false!!B G
)!!G H
."" 

Annotation"" #
(""# $
$str""$ 8
,""8 9
$str"": @
)""@ A
,""A B
Nombre## 
=## 
table## "
.##" #
Column### )
<##) *
string##* 0
>##0 1
(##1 2
type##2 6
:##6 7
$str##8 G
,##G H
nullable##I Q
:##Q R
true##S W
)##W X
,##X Y
Apellido$$ 
=$$ 
table$$ $
.$$$ %
Column$$% +
<$$+ ,
string$$, 2
>$$2 3
($$3 4
type$$4 8
:$$8 9
$str$$: I
,$$I J
nullable$$K S
:$$S T
true$$U Y
)$$Y Z
,$$Z [
VideoId%% 
=%% 
table%% #
.%%# $
Column%%$ *
<%%* +
int%%+ .
>%%. /
(%%/ 0
type%%0 4
:%%4 5
$str%%6 ;
,%%; <
nullable%%= E
:%%E F
false%%G L
)%%L M
}&& 
,&& 
constraints'' 
:'' 
table'' "
=>''# %
{(( 
table)) 
.)) 

PrimaryKey)) $
())$ %
$str))% 2
,))2 3
x))4 5
=>))6 8
x))9 :
.)): ;
Id)); =
)))= >
;))> ?
table** 
.** 

ForeignKey** $
(**$ %
name++ 
:++ 
$str++ :
,++: ;
column,, 
:,, 
x,,  !
=>,," $
x,,% &
.,,& '
VideoId,,' .
,,,. /
principalTable-- &
:--& '
$str--( 0
,--0 1
principalColumn.. '
:..' (
$str..) -
,..- .
onDelete//  
://  !
ReferentialAction//" 3
.//3 4
Cascade//4 ;
)//; <
;//< =
}00 
)00 
;00 
migrationBuilder22 
.22 
CreateTable22 (
(22( )
name33 
:33 
$str33 "
,33" #
columns44 
:44 
table44 
=>44 !
new44" %
{55 
VideoId66 
=66 
table66 #
.66# $
Column66$ *
<66* +
int66+ .
>66. /
(66/ 0
type660 4
:664 5
$str666 ;
,66; <
nullable66= E
:66E F
false66G L
)66L M
,66M N
ActorId77 
=77 
table77 #
.77# $
Column77$ *
<77* +
int77+ .
>77. /
(77/ 0
type770 4
:774 5
$str776 ;
,77; <
nullable77= E
:77E F
false77G L
)77L M
}88 
,88 
constraints99 
:99 
table99 "
=>99# %
{:: 
table;; 
.;; 

PrimaryKey;; $
(;;$ %
$str;;% 4
,;;4 5
x;;6 7
=>;;8 :
new;;; >
{;;? @
x;;A B
.;;B C
ActorId;;C J
,;;J K
x;;L M
.;;M N
VideoId;;N U
};;V W
);;W X
;;;X Y
table<< 
.<< 

ForeignKey<< $
(<<$ %
name== 
:== 
$str== ;
,==; <
column>> 
:>> 
x>>  !
=>>>" $
x>>% &
.>>& '
ActorId>>' .
,>>. /
principalTable?? &
:??& '
$str??( /
,??/ 0
principalColumn@@ '
:@@' (
$str@@) -
,@@- .
onDeleteAA  
:AA  !
ReferentialActionAA" 3
.AA3 4
CascadeAA4 ;
)AA; <
;AA< =
tableBB 
.BB 

ForeignKeyBB $
(BB$ %
nameCC 
:CC 
$strCC <
,CC< =
columnDD 
:DD 
xDD  !
=>DD" $
xDD% &
.DD& '
VideoIdDD' .
,DD. /
principalTableEE &
:EE& '
$strEE( 0
,EE0 1
principalColumnFF '
:FF' (
$strFF) -
,FF- .
onDeleteGG  
:GG  !
ReferentialActionGG" 3
.GG3 4
CascadeGG4 ;
)GG; <
;GG< =
}HH 
)HH 
;HH 
migrationBuilderJJ 
.JJ 
CreateIndexJJ (
(JJ( )
nameKK 
:KK 
$strKK +
,KK+ ,
tableLL 
:LL 
$strLL !
,LL! "
columnMM 
:MM 
$strMM !
,MM! "
uniqueNN 
:NN 
trueNN 
)NN 
;NN 
migrationBuilderPP 
.PP 
CreateIndexPP (
(PP( )
nameQQ 
:QQ 
$strQQ -
,QQ- .
tableRR 
:RR 
$strRR #
,RR# $
columnSS 
:SS 
$strSS !
)SS! "
;SS" #
migrationBuilderUU 
.UU 
AddForeignKeyUU *
(UU* +
nameVV 
:VV 
$strVV 6
,VV6 7
tableWW 
:WW 
$strWW 
,WW  
columnXX 
:XX 
$strXX $
,XX$ %
principalTableYY 
:YY 
$strYY  +
,YY+ ,
principalColumnZZ 
:ZZ  
$strZZ! %
,ZZ% &
onDelete[[ 
:[[ 
ReferentialAction[[ +
.[[+ ,
Restrict[[, 4
)[[4 5
;[[5 6
}\\ 	
	protected^^ 
override^^ 
void^^ 
Down^^  $
(^^$ %
MigrationBuilder^^% 5
migrationBuilder^^6 F
)^^F G
{__ 	
migrationBuilder`` 
.`` 
DropForeignKey`` +
(``+ ,
nameaa 
:aa 
$straa 6
,aa6 7
tablebb 
:bb 
$strbb 
)bb  
;bb  !
migrationBuilderdd 
.dd 
	DropTabledd &
(dd& '
nameee 
:ee 
$stree  
)ee  !
;ee! "
migrationBuildergg 
.gg 
	DropTablegg &
(gg& '
namehh 
:hh 
$strhh "
)hh" #
;hh# $
migrationBuilderjj 
.jj 
	DropTablejj &
(jj& '
namekk 
:kk 
$strkk 
)kk 
;kk 
migrationBuildermm 
.mm 
AddForeignKeymm *
(mm* +
namenn 
:nn 
$strnn 6
,nn6 7
tableoo 
:oo 
$stroo 
,oo  
columnpp 
:pp 
$strpp $
,pp$ %
principalTableqq 
:qq 
$strqq  +
,qq+ ,
principalColumnrr 
:rr  
$strrr! %
,rr% &
onDeletess 
:ss 
ReferentialActionss +
.ss+ ,
Cascadess, 3
)ss3 4
;ss4 5
}tt 	
}uu 
}vv ¿
zC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Migrations\20221004033058_CleanArquitectureCodemvs.cs
	namespace 	
CleanArchitecture
 
. 
Data  
.  !

Migrations! +
{ 
public 

partial 
class $
CleanArquitectureCodemvs 1
:2 3
	Migration4 =
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 3
,3 4
table 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str  
,  !
table 
: 
$str 
) 
;  
migrationBuilder 
. 
RenameTable (
(( )
name 
: 
$str 
, 
newName 
: 
$str "
)" #
;# $
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str !
,! "
table 
: 
$str 
,  
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str #
,# $
table   
:   
$str   
,    
type!! 
:!! 
$str!! !
,!!! "
nullable"" 
:"" 
true"" 
)"" 
;""  
migrationBuilder$$ 
.$$ 
	AddColumn$$ &
<$$& '
string$$' -
>$$- .
($$. /
name%% 
:%% 
$str%% &
,%%& '
table&& 
:&& 
$str&& 
,&&  
type'' 
:'' 
$str'' %
,''% &
nullable(( 
:(( 
true(( 
)(( 
;((  
migrationBuilder** 
.** 
	AddColumn** &
<**& '
DateTime**' /
>**/ 0
(**0 1
name++ 
:++ 
$str++ (
,++( )
table,, 
:,, 
$str,, 
,,,  
type-- 
:-- 
$str-- !
,--! "
nullable.. 
:.. 
true.. 
).. 
;..  
migrationBuilder00 
.00 
	AddColumn00 &
<00& '
string00' -
>00- .
(00. /
name11 
:11 
$str11 !
,11! "
table22 
:22 
$str22 #
,22# $
type33 
:33 
$str33 %
,33% &
nullable44 
:44 
true44 
)44 
;44  
migrationBuilder66 
.66 
	AddColumn66 &
<66& '
DateTime66' /
>66/ 0
(660 1
name77 
:77 
$str77 #
,77# $
table88 
:88 
$str88 #
,88# $
type99 
:99 
$str99 !
,99! "
nullable:: 
::: 
true:: 
):: 
;::  
migrationBuilder<< 
.<< 
	AddColumn<< &
<<<& '
int<<' *
><<* +
(<<+ ,
name== 
:== 
$str== 
,== 
table>> 
:>> 
$str>> #
,>># $
type?? 
:?? 
$str?? 
,?? 
nullable@@ 
:@@ 
false@@ 
,@@  
defaultValueAA 
:AA 
$numAA 
)AA  
;AA  !
migrationBuilderCC 
.CC 
	AddColumnCC &
<CC& '
stringCC' -
>CC- .
(CC. /
nameDD 
:DD 
$strDD &
,DD& '
tableEE 
:EE 
$strEE #
,EE# $
typeFF 
:FF 
$strFF %
,FF% &
nullableGG 
:GG 
trueGG 
)GG 
;GG  
migrationBuilderII 
.II 
	AddColumnII &
<II& '
DateTimeII' /
>II/ 0
(II0 1
nameJJ 
:JJ 
$strJJ (
,JJ( )
tableKK 
:KK 
$strKK #
,KK# $
typeLL 
:LL 
$strLL !
,LL! "
nullableMM 
:MM 
trueMM 
)MM 
;MM  
migrationBuilderOO 
.OO 
	AddColumnOO &
<OO& '
stringOO' -
>OO- .
(OO. /
namePP 
:PP 
$strPP !
,PP! "
tableQQ 
:QQ 
$strQQ "
,QQ" #
typeRR 
:RR 
$strRR %
,RR% &
nullableSS 
:SS 
trueSS 
)SS 
;SS  
migrationBuilderUU 
.UU 
	AddColumnUU &
<UU& '
DateTimeUU' /
>UU/ 0
(UU0 1
nameVV 
:VV 
$strVV #
,VV# $
tableWW 
:WW 
$strWW "
,WW" #
typeXX 
:XX 
$strXX !
,XX! "
nullableYY 
:YY 
trueYY 
)YY 
;YY  
migrationBuilder[[ 
.[[ 
	AddColumn[[ &
<[[& '
string[[' -
>[[- .
([[. /
name\\ 
:\\ 
$str\\ &
,\\& '
table]] 
:]] 
$str]] "
,]]" #
type^^ 
:^^ 
$str^^ %
,^^% &
nullable__ 
:__ 
true__ 
)__ 
;__  
migrationBuilderaa 
.aa 
	AddColumnaa &
<aa& '
DateTimeaa' /
>aa/ 0
(aa0 1
namebb 
:bb 
$strbb (
,bb( )
tablecc 
:cc 
$strcc "
,cc" #
typedd 
:dd 
$strdd !
,dd! "
nullableee 
:ee 
trueee 
)ee 
;ee  
migrationBuildergg 
.gg 
	AddColumngg &
<gg& '
stringgg' -
>gg- .
(gg. /
namehh 
:hh 
$strhh !
,hh! "
tableii 
:ii 
$strii !
,ii! "
typejj 
:jj 
$strjj %
,jj% &
nullablekk 
:kk 
truekk 
)kk 
;kk  
migrationBuildermm 
.mm 
	AddColumnmm &
<mm& '
DateTimemm' /
>mm/ 0
(mm0 1
namenn 
:nn 
$strnn #
,nn# $
tableoo 
:oo 
$stroo !
,oo! "
typepp 
:pp 
$strpp !
,pp! "
nullableqq 
:qq 
trueqq 
)qq 
;qq  
migrationBuilderss 
.ss 
	AddColumnss &
<ss& '
stringss' -
>ss- .
(ss. /
namett 
:tt 
$strtt &
,tt& '
tableuu 
:uu 
$struu !
,uu! "
typevv 
:vv 
$strvv %
,vv% &
nullableww 
:ww 
trueww 
)ww 
;ww  
migrationBuilderyy 
.yy 
	AddColumnyy &
<yy& '
DateTimeyy' /
>yy/ 0
(yy0 1
namezz 
:zz 
$strzz (
,zz( )
table{{ 
:{{ 
$str{{ !
,{{! "
type|| 
:|| 
$str|| !
,||! "
nullable}} 
:}} 
true}} 
)}} 
;}}  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name
 
:
 
$str
 !
,
! "
table
 
:
 
$str
  
,
  !
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
DateTime
' /
>
/ 0
(
0 1
name
 
:
 
$str
 #
,
# $
table
 
:
 
$str
  
,
  !
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
 &
,
& '
table
 
:
 
$str
  
,
  !
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
DateTime
' /
>
/ 0
(
0 1
name
 
:
 
$str
 (
,
( )
table
 
:
 
$str
  
,
  !
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
AddPrimaryKey
 *
(
* +
name
 
:
 
$str
 "
,
" #
table
 
:
 
$str
  
,
  !
column
 
:
 
$str
 
)
 
;
 
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 5
,
5 6
table
 
:
 
$str
 #
,
# $
column
 
:
 
$str
 !
,
! "
principalTable
   
:
   
$str
    )
,
  ) *
principalColumn
¡¡ 
:
¡¡  
$str
¡¡! %
,
¡¡% &
onDelete
¢¢ 
:
¢¢ 
ReferentialAction
¢¢ +
.
¢¢+ ,
Cascade
¢¢, 3
)
¢¢3 4
;
¢¢4 5
}
££ 	
	protected
¥¥ 
override
¥¥ 
void
¥¥ 
Down
¥¥  $
(
¥¥$ %
MigrationBuilder
¥¥% 5
migrationBuilder
¥¥6 F
)
¥¥F G
{
¦¦ 	
migrationBuilder
§§ 
.
§§ 
DropForeignKey
§§ +
(
§§+ ,
name
¨¨ 
:
¨¨ 
$str
¨¨ 5
,
¨¨5 6
table
©© 
:
©© 
$str
©© #
)
©©# $
;
©©$ %
migrationBuilder
«« 
.
«« 
DropPrimaryKey
«« +
(
««+ ,
name
¬¬ 
:
¬¬ 
$str
¬¬ "
,
¬¬" #
table
­­ 
:
­­ 
$str
­­  
)
­­  !
;
­­! "
migrationBuilder
¯¯ 
.
¯¯ 

DropColumn
¯¯ '
(
¯¯' (
name
°° 
:
°° 
$str
°° !
,
°°! "
table
±± 
:
±± 
$str
±± 
)
±±  
;
±±  !
migrationBuilder
³³ 
.
³³ 

DropColumn
³³ '
(
³³' (
name
´´ 
:
´´ 
$str
´´ #
,
´´# $
table
µµ 
:
µµ 
$str
µµ 
)
µµ  
;
µµ  !
migrationBuilder
·· 
.
·· 

DropColumn
·· '
(
··' (
name
¸¸ 
:
¸¸ 
$str
¸¸ &
,
¸¸& '
table
¹¹ 
:
¹¹ 
$str
¹¹ 
)
¹¹  
;
¹¹  !
migrationBuilder
»» 
.
»» 

DropColumn
»» '
(
»»' (
name
¼¼ 
:
¼¼ 
$str
¼¼ (
,
¼¼( )
table
½½ 
:
½½ 
$str
½½ 
)
½½  
;
½½  !
migrationBuilder
¿¿ 
.
¿¿ 

DropColumn
¿¿ '
(
¿¿' (
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ !
,
ÀÀ! "
table
ÁÁ 
:
ÁÁ 
$str
ÁÁ #
)
ÁÁ# $
;
ÁÁ$ %
migrationBuilder
ÃÃ 
.
ÃÃ 

DropColumn
ÃÃ '
(
ÃÃ' (
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ #
,
ÄÄ# $
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
migrationBuilder
ÇÇ 
.
ÇÇ 

DropColumn
ÇÇ '
(
ÇÇ' (
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ 
,
ÈÈ 
table
ÉÉ 
:
ÉÉ 
$str
ÉÉ #
)
ÉÉ# $
;
ÉÉ$ %
migrationBuilder
ËË 
.
ËË 

DropColumn
ËË '
(
ËË' (
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ &
,
ÌÌ& '
table
ÍÍ 
:
ÍÍ 
$str
ÍÍ #
)
ÍÍ# $
;
ÍÍ$ %
migrationBuilder
ÏÏ 
.
ÏÏ 

DropColumn
ÏÏ '
(
ÏÏ' (
name
ÐÐ 
:
ÐÐ 
$str
ÐÐ (
,
ÐÐ( )
table
ÑÑ 
:
ÑÑ 
$str
ÑÑ #
)
ÑÑ# $
;
ÑÑ$ %
migrationBuilder
ÓÓ 
.
ÓÓ 

DropColumn
ÓÓ '
(
ÓÓ' (
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ !
,
ÔÔ! "
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ "
)
ÕÕ" #
;
ÕÕ# $
migrationBuilder
×× 
.
×× 

DropColumn
×× '
(
××' (
name
ØØ 
:
ØØ 
$str
ØØ #
,
ØØ# $
table
ÙÙ 
:
ÙÙ 
$str
ÙÙ "
)
ÙÙ" #
;
ÙÙ# $
migrationBuilder
ÛÛ 
.
ÛÛ 

DropColumn
ÛÛ '
(
ÛÛ' (
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ &
,
ÜÜ& '
table
ÝÝ 
:
ÝÝ 
$str
ÝÝ "
)
ÝÝ" #
;
ÝÝ# $
migrationBuilder
ßß 
.
ßß 

DropColumn
ßß '
(
ßß' (
name
àà 
:
àà 
$str
àà (
,
àà( )
table
áá 
:
áá 
$str
áá "
)
áá" #
;
áá# $
migrationBuilder
ãã 
.
ãã 

DropColumn
ãã '
(
ãã' (
name
ää 
:
ää 
$str
ää !
,
ää! "
table
åå 
:
åå 
$str
åå !
)
åå! "
;
åå" #
migrationBuilder
çç 
.
çç 

DropColumn
çç '
(
çç' (
name
èè 
:
èè 
$str
èè #
,
èè# $
table
éé 
:
éé 
$str
éé !
)
éé! "
;
éé" #
migrationBuilder
ëë 
.
ëë 

DropColumn
ëë '
(
ëë' (
name
ìì 
:
ìì 
$str
ìì &
,
ìì& '
table
íí 
:
íí 
$str
íí !
)
íí! "
;
íí" #
migrationBuilder
ïï 
.
ïï 

DropColumn
ïï '
(
ïï' (
name
ðð 
:
ðð 
$str
ðð (
,
ðð( )
table
ññ 
:
ññ 
$str
ññ !
)
ññ! "
;
ññ" #
migrationBuilder
óó 
.
óó 

DropColumn
óó '
(
óó' (
name
ôô 
:
ôô 
$str
ôô !
,
ôô! "
table
õõ 
:
õõ 
$str
õõ  
)
õõ  !
;
õõ! "
migrationBuilder
÷÷ 
.
÷÷ 

DropColumn
÷÷ '
(
÷÷' (
name
øø 
:
øø 
$str
øø #
,
øø# $
table
ùù 
:
ùù 
$str
ùù  
)
ùù  !
;
ùù! "
migrationBuilder
ûû 
.
ûû 

DropColumn
ûû '
(
ûû' (
name
üü 
:
üü 
$str
üü &
,
üü& '
table
ýý 
:
ýý 
$str
ýý  
)
ýý  !
;
ýý! "
migrationBuilder
ÿÿ 
.
ÿÿ 

DropColumn
ÿÿ '
(
ÿÿ' (
name
 
:
 
$str
 (
,
( )
table
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
RenameTable
 (
(
( )
name
 
:
 
$str
 
,
  
newName
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
AddPrimaryKey
 *
(
* +
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 
,
 
column
 
:
 
$str
 
)
 
;
 
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 3
,
3 4
table
 
:
 
$str
 #
,
# $
column
 
:
 
$str
 !
,
! "
principalTable
 
:
 
$str
  '
,
' (
principalColumn
 
:
  
$str
! %
,
% &
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Cascade
, 3
)
3 4
;
4 5
}
 	
}
 
} '
eC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Persistence\StreamerDbContext.cs
	namespace 	
CleanArchitecture
 
. 
Infraestructure +
.+ ,
Persistence, 7
{		 
public

 

class

 
StreamerDbContext

 "
:

# $
	DbContext

% .
{ 
public 
StreamerDbContext  
(  !
DbContextOptions! 1
<1 2
StreamerDbContext2 C
>C D
optionsE L
)L M
:M N
baseN R
(R S
optionsS Z
)Z [
{ 	
} 	
public 
override 
Task 
< 
int  
>  !
SaveChangesAsync" 2
(2 3
CancellationToken3 D
cancellationTokenE V
=W X
defaultY `
)` a
{ 	
foreach 
( 
var 
entry 
in  
ChangeTracker! .
.. /
Entries/ 6
<6 7
BaseDomainModel7 F
>F G
(G H
)H I
)I J
{ 
switch 
( 
entry 
. 
State #
)# $
{ 
case 
EntityState $
.$ %
Added% *
:* +
entry 
. 
Entity $
.$ %
CreatedDate% 0
=1 2
DateTime3 ;
.; <
Now< ?
;? @
entry   
.   
Entity   $
.  $ %
	CreatedBy  % .
=  / 0
$str  1 9
;  9 :
break!! 
;!! 
case"" 
EntityState"" $
.""$ %
Modified""% -
:""- .
entry## 
.## 
Entity## $
.##$ %
LastModifiedDate##% 5
=##6 7
DateTime##8 @
.##@ A
Now##A D
;##D E
entry$$ 
.$$ 
Entity$$ $
.$$$ %
LastModifiedBy$$% 3
=$$4 5
$str$$6 >
;$$> ?
break%% 
;%% 
}&& 
}'' 
return)) 
base)) 
.)) 
SaveChangesAsync)) (
())( )
cancellationToken))) :
))): ;
;)); <
}** 	
	protected++ 
override++ 
void++ 
OnModelCreating++  /
(++/ 0
ModelBuilder++0 <
modelBuilder++= I
)++I J
{,, 	
modelBuilder.. 
... 
Entity.. 
<..  
Streamer..  (
>..( )
(..) *
)..* +
.// 
HasMany// 
(// 
m// 
=>// 
m// 
.//  
Videos//  &
)//& '
.00 
WithOne00 
(00 
m00 
=>00 
m00 
.00  
Streamer00  (
)00( )
.11 
HasForeignKey11 
(11 
m11  
=>11! #
m11$ %
.11% &

StreamerId11& 0
)110 1
.22 

IsRequired22 
(22 
)22 
.33 
OnDelete33 
(33 
DeleteBehavior33 (
.33( )
Restrict33) 1
)331 2
;332 3
modelBuilder55 
.55 
Entity55 
<55  
Video55  %
>55% &
(55& '
)55' (
.66 
HasMany66 
(66 
a66 
=>66 
a66 
.66  
Actores66  '
)66' (
.77 
WithMany77 
(77 
v77 
=>77 
v77  
.77  !
Videos77! '
)77' (
.88 
UsingEntity88 
<88 

VideoActor88 '
>88' (
(88( )
pt99 
=>99 
pt99 
.99 
HasKey99 #
(99# $
e99$ %
=>99& (
new99) ,
{99- .
e99/ 0
.990 1
ActorId991 8
,998 9
e99: ;
.99; <
VideoId99< C
}99D E
)99E F
):: 
;:: 
};; 	
public<< 
DbSet<< 
<<< 
Streamer<< 
><< 
	Streamers<< (
{<<) *
get<<+ .
;<<. /
set<<0 3
;<<3 4
}<<5 6
public== 
DbSet== 
<== 
Video== 
>== 
Videos== "
{==# $
get==% (
;==( )
set==* -
;==- .
}==/ 0
public>> 
DbSet>> 
<>> 
Actor>> 
>>> 
Actores>> #
{>>$ %
get>>& )
;>>) *
set>>+ .
;>>. /
}>>0 1
}?? 
}@@ 
iC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Persistence\StreamerDbContextSeed.cs
	namespace 	
CleanArchitecture
 
. 
Infraestructure +
.+ ,
Persistence, 7
{ 
public		 

class		 !
StreamerDbContextSeed		 &
{

 
public 
static 
async 
Task  
	SeedAsync! *
(* +
StreamerDbContext+ <
context= D
,D E
ILoggerF M
<M N!
StreamerDbContextSeedN c
>c d
loggere k
)k l
{m n
if 
( 
! 
context 
. 
	Streamers "
!" #
.# $
Any$ '
(' (
)( )
)) *
{ 
context 
. 
	Streamers !
!! "
." #
AddRange# +
(+ ,$
GetPreconfiguredStreamer, D
(D E
)E F
)F G
;G H
await 
context 
. 
SaveChangesAsync .
(. /
)/ 0
;0 1
logger 
. 
LogInformation %
(% &
$str& Y
,Y Z
typeof[ a
(a b
StreamerDbContextb s
)s t
.t u
Nameu y
)y z
;z {
} 
} 	
private 
static 
IEnumerable "
<" #
Streamer# +
>+ ,$
GetPreconfiguredStreamer- E
(E F
)F G
{ 	
return 
new 
List 
< 
Streamer $
>$ %
{ 
new 
Streamer 
{ 
	CreatedBy &
=' (
$str( 2
,2 3
Nombre4 :
=: ;
$str; E
,E F
UrlG J
=K L
$strL `
}` a
,a b
new 
Streamer 
{ 
	CreatedBy &
=' (
$str( 2
,2 3
Nombre4 :
=: ;
$str; G
,G H
UrlI L
=M N
$strN h
}h i
} 
; 
} 	
} 
} ÛY
cC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Repositories\RepositoryBase.cs
	namespace 	
CleanArchitecture
 
. 
Infraestructure +
.+ ,
Repositories, 8
{ 
public 

class 
RepositoryBase 
<  
T  !
>! "
:# $
IAsyncRepository$ 4
<4 5
T5 6
>6 7
where8 =
T> ?
:? @
BaseDomainModelA P
{ 
	protected 
readonly 
StreamerDbContext ,
_context- 5
;5 6
public 
RepositoryBase 
( 
StreamerDbContext /
context0 7
)7 8
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IReadOnlyList '
<' (
T( )
>) *
>* +
GetAllAsync, 7
(7 8
)8 9
{ 	
return 
await 
_context !
.! "
Set" %
<% &
T& '
>' (
(( )
)) *
.* +
ToListAsync+ 6
(6 7
)7 8
;8 9
} 	
public 
async 
Task 
< 
IReadOnlyList '
<' (
T( )
>) *
>* +
GetAsync, 4
(4 5

Expression5 ?
<? @
Func@ D
<D E
TE F
,F G
boolH L
>L M
>M N
	predicateO X
)X Y
{ 	
return 
await 
_context !
.! "
Set" %
<% &
T& '
>' (
(( )
)) *
.* +
Where+ 0
(0 1
	predicate1 :
): ;
.; <
ToListAsync< G
(G H
)H I
;I J
}   	
public"" 
async"" 
Task"" 
<"" 
IReadOnlyList"" '
<""' (
T""( )
>"") *
>""* +
GetAsync"", 4
(""4 5

Expression""5 ?
<""? @
Func""@ D
<""D E
T""E F
,""F G
bool## 
>## 
>## 
	predicate## 
=## 
null## #
,### $
Func$$ 
<$$ 

IQueryable$$ 
<$$ 
T$$ 
>$$ 
,$$ 
IOrderedQueryable$$  1
<$$1 2
T$$2 3
>$$3 4
>$$4 5
orderBy$$6 =
=$$> ?
null$$@ D
,$$D E
string%% 
includeString%%  
=%%! "
null%%# '
,%%' (
bool&& 
disabledTraking&&  
=&&! "
true&&# '
)&&' (
{'' 	

IQueryable(( 
<(( 
T(( 
>(( 
query(( 
=((  !
_context((" *
.((* +
Set((+ .
<((. /
T((/ 0
>((0 1
(((1 2
)((2 3
;((3 4
if)) 
()) 
disabledTraking)) 
)))  
{** 
query,, 
=,, 
query,, 
.,, 
AsNoTracking,, *
(,,* +
),,+ ,
;,,, -
}-- 
if.. 
(.. 
string.. 
... 
IsNullOrWhiteSpace.. )
(..) *
includeString..* 7
)..7 8
)..8 9
{// 
query00 
=00 
query00 
.00 
Include00 %
(00% &
includeString00& 3
)003 4
;004 5
}11 
if22 
(22 
	predicate22 
!=22 
null22  
)22  !
{33 
query44 
=44 
query44 
.44 
Where44 #
(44# $
	predicate44$ -
)44- .
;44. /
}55 
if66 
(66 
orderBy66 
!=66 
null66 
)66  
{77 
return88 
await88 
orderBy88 $
(88$ %
query88% *
)88* +
.88+ ,
ToListAsync88, 7
(887 8
)888 9
;889 :
}99 
return;; 
await;; 
query;; 
.;; 
ToListAsync;; *
(;;* +
);;+ ,
;;;, -
}<< 	
public>> 
async>> 
Task>> 
<>> 
IReadOnlyList>> '
<>>' (
T>>( )
>>>) *
>>>* +
GetAsync>>, 4
(>>4 5

Expression>>5 ?
<>>? @
Func>>@ D
<>>D E
T>>E F
,>>F G
bool>>H L
>>>L M
>>>M N
	predicate>>O X
=>>Y Z
null>>[ _
,>>_ `
Func?? 
<?? 

IQueryable?? 
<?? 
T?? 
>?? 
,?? 
IOrderedQueryable??  1
<??1 2
T??2 3
>??3 4
>??4 5
orderBy??6 =
=??> ?
null??@ D
,??D E
List@@ 
<@@ 

Expression@@ 
<@@ 
Func@@  
<@@  !
T@@! "
,@@" #
object@@$ *
>@@* +
>@@+ ,
>@@, -
includes@@. 6
=@@7 8
null@@9 =
,@@= >
boolAA 
disabledTrakingAA  
=AA! "
trueAA# '
)AA' (
{BB 	

IQueryableCC 
<CC 
TCC 
>CC 
queryCC 
=CC  !
_contextCC" *
.CC* +
SetCC+ .
<CC. /
TCC/ 0
>CC0 1
(CC1 2
)CC2 3
;CC3 4
ifDD 
(DD 
disabledTrakingDD 
)DD  
{EE 
queryGG 
=GG 
queryGG 
.GG 
AsNoTrackingGG *
(GG* +
)GG+ ,
;GG, -
}HH 
ifII 
(II 
includesII 
!=II 
nullII  
)II  !
{JJ 
queryKK 
=KK 
includesKK  
.KK  !
	AggregateKK! *
(KK* +
queryKK+ 0
,KK0 1
(KK2 3
currentKK3 :
,KK: ;
includeKK< C
)KKC D
=>KKE G
currentKKH O
.KKO P
IncludeKKP W
(KKW X
includeKKX _
)KK_ `
)KK` a
;KKa b
}LL 
ifMM 
(MM 
	predicateMM 
!=MM 
nullMM !
)MM! "
{NN 
queryOO 
=OO 
queryOO 
.OO 
WhereOO #
(OO# $
	predicateOO$ -
)OO- .
;OO. /
}PP 
ifQQ 
(QQ 
orderByQQ 
!=QQ 
nullQQ 
)QQ  
{RR 
returnSS 
awaitSS 
orderBySS $
(SS$ %
querySS% *
)SS* +
.SS+ ,
ToListAsyncSS, 7
(SS7 8
)SS8 9
;SS9 :
}TT 
returnVV 
awaitVV 
queryVV 
.VV 
ToListAsyncVV *
(VV* +
)VV+ ,
;VV, -
}WW 	
publicYY 
virtualYY 
asyncYY 
TaskYY !
<YY! "
TYY" #
>YY# $
GetByIdAsyncYY% 1
(YY1 2
intYY2 5
idYY6 8
)YY8 9
{ZZ 	
return[[ 
await[[ 
_context[[ !
.[[! "
Set[[" %
<[[% &
T[[& '
>[[' (
([[( )
)[[) *
.[[* +
	FindAsync[[+ 4
([[4 5
id[[5 7
)[[7 8
;[[8 9
}\\ 	
public]] 
async]] 
Task]] 
<]] 
T]] 
>]] 
AddAsync]] %
(]]% &
T]]& '
entity]]( .
)]]. /
{^^ 	
_context__ 
.__ 
Set__ 
<__ 
T__ 
>__ 
(__ 
)__ 
.__ 
Add__ !
(__! "
entity__" (
)__( )
;__) *
await`` 
_context`` 
.`` 
SaveChangesAsync`` +
(``+ ,
)``, -
;``- .
returnaa 
entityaa 
;aa 
}bb 	
publiccc 
asynccc 
Taskcc 
<cc 
Tcc 
>cc 
UpdateAsynccc (
(cc( )
Tcc) *
entitycc+ 1
)cc1 2
{dd 	
_contextee 
.ee 
Setee 
<ee 
Tee 
>ee 
(ee 
)ee 
.ee 
Attachee $
(ee$ %
entityee% +
)ee+ ,
;ee, -
_contextff 
.ff 
Entryff 
(ff 
entityff !
)ff! "
.ff" #
Stateff# (
=ff) *
EntityStateff+ 6
.ff6 7
Modifiedff7 ?
;ff? @
awaitgg 
_contextgg 
.gg 
SaveChangesAsyncgg +
(gg+ ,
)gg, -
;gg- .
returnhh 
entityhh 
;hh 
}ii 	
publicjj 
asyncjj 
Taskjj 
DeleteAsyncjj %
(jj% &
Tjj& '
entityjj( .
)jj. /
{kk 	
_contextll 
.ll 
Setll 
<ll 
Tll 
>ll 
(ll 
)ll 
.ll 
Removell $
(ll$ %
entityll% +
)ll+ ,
;ll, -
awaitmm 
_contextmm 
.mm 
SaveChangesAsyncmm +
(mm+ ,
)mm, -
;mm- .
}nn 	
publicpp 
voidpp 
	AddEntitypp 
(pp 
Tpp 
entitypp  &
)pp& '
{qq 	
_contextrr 
.rr 
Setrr 
<rr 
Trr 
>rr 
(rr 
)rr 
.rr 
Addrr !
(rr! "
entityrr" (
)rr( )
;rr) *
}ss 	
publicuu 
voiduu 
UpdateEntityuu  
(uu  !
Tuu! "
entityuu# )
)uu) *
{vv 	
_contextww 
.ww 
Setww 
<ww 
Tww 
>ww 
(ww 
)ww 
.ww 
Attachww $
(ww$ %
entityww% +
)ww+ ,
;ww, -
_contextxx 
.xx 
Entryxx 
(xx 
entityxx !
)xx! "
.xx" #
Statexx# (
=xx) *
EntityStatexx+ 6
.xx6 7
Modifiedxx7 ?
;xx? @
}yy 	
public{{ 
void{{ 
DeleteEntity{{  
({{  !
T{{! "
entity{{# )
){{) *
{|| 	
_context}} 
.}} 
Set}} 
<}} 
T}} 
>}} 
(}} 
)}} 
.}} 
Remove}} $
(}}$ %
entity}}% +
)}}+ ,
;}}, -
}~~ 	
} 
} ø
gC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Repositories\StreamerRepository.cs
	namespace 	
CleanArchitecture
 
. 
Infraestructure +
.+ ,
Repositories, 8
{ 
public 

class 
StreamerRepository #
:$ %
RepositoryBase& 4
<4 5
Streamer5 =
>= >
,> ?
IStreamerRepository@ S
{ 
public

 
StreamerRepository

 !
(

! "
StreamerDbContext

" 3
context

4 ;
)

; <
:

= >
base

? C
(

C D
context

D K
)

K L
{ 	
} 	
} 
} ¶ 
_C:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Repositories\UnitOfWork.cs
	namespace 	
CleanArchitecture
 
. 
Infraestructure +
.+ ,
Repositories, 8
{		 
public

 

class

 

UnitOfWork

 
:

 
IUnitOfWork

 )
{ 
private 
	Hashtable 
_repositories '
;' (
private 
readonly 
StreamerDbContext *
_context+ 3
;3 4
private 
IVideoRepository  
_videoRepository! 1
;1 2
private 
IStreamerRepository #
_streamerRepository$ 7
;7 8
public 
IVideoRepository 
VideoRepository  /
=>0 2
_videoRepository3 C
??=D G
newH K
VideoRepositoryL [
([ \
_context\ d
)d e
;e f
public 
IStreamerRepository "
StreamerRepository# 5
=>6 8
_streamerRepository9 L
??=M P
newQ T
StreamerRepositoryU g
(g h
_contexth p
)p q
;q r
public 

UnitOfWork 
( 
StreamerDbContext +
context, 3
)3 4
{ 	
_context 
= 
context 
; 
} 	
public 
StreamerDbContext  
StreamerDbContext! 2
=>3 5
_context6 >
;> ?
public 
async 
Task 
< 
int 
> 
Complete '
(' (
)( )
{ 	
return 
await 
_context !
.! "
SaveChangesAsync" 2
(2 3
)3 4
;4 5
} 	
public 
void 
Dispose 
( 
) 
{   	
_context!! 
.!! 
Dispose!! 
(!! 
)!! 
;!! 
}"" 	
public$$ 
IAsyncRepository$$ 
<$$  
TEntity$$  '
>$$' (

Repository$$) 3
<$$3 4
TEntity$$4 ;
>$$; <
($$< =
)$$= >
where$$? D
TEntity$$E L
:$$M N
BaseDomainModel$$O ^
{%% 	
if&& 
(&& 
_repositories&& 
==&& 
null&&  $
)&&$ %
{'' 
_repositories(( 
=(( 
new((  #
	Hashtable(($ -
(((- .
)((. /
;((/ 0
})) 
var++ 
type++ 
=++ 
typeof++ 
(++ 
TEntity++ %
)++% &
.++& '
Name++' +
;+++ ,
if,, 
(,, 
!,, 
_repositories,, 
.,, 
ContainsKey,, *
(,,* +
type,,+ /
),,/ 0
),,0 1
{-- 
var.. 
repositoryType.. "
=..# $
typeof..% +
(..+ ,
RepositoryBase.., :
<..: ;
>..; <
)..< =
;..= >
var// 
repositoryInstance// &
=//' (
	Activator//) 2
.//2 3
CreateInstance//3 A
(//A B
repositoryType//B P
.//P Q
MakeGenericType//Q `
(//` a
typeof//a g
(//g h
TEntity//h o
)//o p
)//p q
,//q r
_context//s {
)//{ |
;//| }
_repositories00 
.00 
Add00 !
(00! "
type00" &
,00& '
repositoryInstance00( :
)00: ;
;00; <
}11 
return22 
(22 
IAsyncRepository22 $
<22$ %
TEntity22% ,
>22, -
)22- .
_repositories22. ;
[22; <
type22< @
]22@ A
;22A B
}33 	
}44 
}55 ÿ
dC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Data\Repositories\VideoRepository.cs
	namespace		 	
CleanArchitecture		
 
.		 
Infraestructure		 +
.		+ ,
Repositories		, 8
{

 
public 

class 
VideoRepository  
:! "
RepositoryBase# 1
<1 2
Video2 7
>7 8
,8 9
IVideoRepository: J
{ 
public 
VideoRepository 
( 
StreamerDbContext 0
context1 8
)8 9
:: ;
base< @
(@ A
contextA H
)H I
{ 	
} 	
public 
async 
Task 
< 
Video 
>  
GetVideoByName! /
(/ 0
string0 6
	nameVideo7 @
)@ A
{ 	
return 
await 
_context !
.! "
Videos" (
!( )
. 
Where 
( 
v 
=> 
v 
. 
Nombre $
==% '
	nameVideo( 1
)1 2
. 
FirstOrDefaultAsync $
($ %
)% &
;& '
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Video& +
>+ ,
>, -
GetVideoByUserName. @
(@ A
stringA G
usernameH P
)P Q
{ 	
return 
await 
_context !
.! "
Videos" (
!( )
. 
Where 
( 
v 
=> 
v 
. 
	CreatedBy '
==( *
username+ 3
)3 4
. 
ToListAsync 
( 
) 
; 
} 	
} 
} 