ù
nC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Identity\CleanArchitectureIdentityDbContext.cs
	namespace 	
CleanArchitecture
 
. 
Identity $
{ 
public 

class .
"CleanArchitectureIdentityDbContext 3
:4 5
IdentityDbContext6 G
<G H
ApplicationUserH W
>W X
{		 
public

 .
"CleanArchitectureIdentityDbContext

 1
(

1 2
DbContextOptions

2 B
<

B C.
"CleanArchitectureIdentityDbContext

C e
>

e f
options

g n
)

n o
:

p q
base

r v
(

v w
options

w ~
)

~ 
{ 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
builder= D
)D E
{ 	
base 
. 
OnModelCreating  
(  !
builder! (
)( )
;) *
builder 
. 
ApplyConfiguration &
(& '
new' *
RoleConfiguration+ <
(< =
)= >
)> ?
;? @
builder 
. 
ApplyConfiguration &
(& '
new' *
UserCofiguration+ ;
(; <
)< =
)= >
;> ?
builder 
. 
ApplyConfiguration &
(& '
new' *!
UserRoleConfiguration+ @
(@ A
)A B
)B C
;C D
} 	
} 
} Ö
lC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Identity\Configurations\RoleConfiguration.cs
	namespace 	
CleanArchitecture
 
. 
Identity $
.$ %
Configurations% 3
{ 
internal 
class 
RoleConfiguration $
:% &$
IEntityTypeConfiguration' ?
<? @
IdentityRole@ L
>L M
{ 
public		 
void		 
	Configure		 
(		 
EntityTypeBuilder		 /
<		/ 0
IdentityRole		0 <
>		< =
builder		> E
)		E F
{

 	
builder 
. 
HasData 
( 
new 
IdentityRole  
(  !
)! "
{ 
Id 
= 
$str ?
,? @
Name 
= 
$str *
,* +
NormalizedName "
=# $
$str% 4
} 
, 
new 
IdentityRole  
(  !
)! "
{ 
Id 
= 
$str ?
,? @
Name 
= 
$str %
,% &
NormalizedName "
=# $
$str% /
} 
) 
; 
} 	
} 
} ¬
kC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Identity\Configurations\UserCofiguration.cs
	namespace 	
CleanArchitecture
 
. 
Identity $
.$ %
Configurations% 3
{ 
internal 
class 
UserCofiguration #
:$ %$
IEntityTypeConfiguration& >
<> ?
ApplicationUser? N
>N O
{		 
public

 
void

 
	Configure

 
(

 
EntityTypeBuilder

 /
<

/ 0
ApplicationUser

0 ?
>

? @
builder

A H
)

H I
{ 	
var 
hasher 
= 
new 
PasswordHasher +
<+ ,
ApplicationUser, ;
>; <
(< =
)= >
;> ?
builder 
. 
HasData 
( 
new 
ApplicationUser #
(# $
)$ %
{ 
Id 
= 
$str ?
,? @
Email 
= 
$str 1
,1 2
NormalizedEmail #
=$ %
$str& ;
,; <
Nombre 
= 
$str &
,& '
	Apellidos 
= 
$str  &
,& '
UserName 
= 
$str (
,( )
NormalizedUserName &
=' (
$str) 2
,2 3
PasswordHash  
=! "
hasher# )
.) *
HashPassword* 6
(6 7
null7 ;
,; <
$str= J
)J K
,K L
EmailConfirmed "
=# $
true% )
} 
, 
new 
ApplicationUser #
(# $
)$ %
{ 
Id 
= 
$str ?
,? @
Email 
= 
$str 0
,0 1
NormalizedEmail #
=$ %
$str& :
,: ;
Nombre 
= 
$str #
,# $
	Apellidos   
=   
$str    &
,  & '
UserName!! 
=!! 
$str!! %
,!!% &
NormalizedUserName"" &
=""' (
$str"") /
,""/ 0
PasswordHash##  
=##! "
hasher### )
.##) *
HashPassword##* 6
(##6 7
null##7 ;
,##; <
$str##= G
)##G H
,##H I
EmailConfirmed$$ "
=$$# $
true$$% )
}%% 
)&& 
;&& 
}'' 	
}(( 
})) õ
pC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Identity\Configurations\UserRoleConfiguration.cs
	namespace

 	
CleanArchitecture


 
.

 
Identity

 $
.

$ %
Configurations

% 3
{ 
public 

class !
UserRoleConfiguration &
:' ($
IEntityTypeConfiguration) A
<A B
IdentityUserRoleB R
<R S
stringS Y
>Y Z
>Z [
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
IdentityUserRole0 @
<@ A
stringA G
>G H
>H I
builderJ Q
)Q R
{ 	
builder 
. 
HasData 
( 
new 
IdentityUserRole  0
<0 1
string1 7
>7 8
{ 
RoleId 
= 
$str ?
,? @
UserId 
= 
$str ?
} 
, 
new 
IdentityUserRole  
<  !
string! '
>' (
{ 
RoleId 
= 
$str ?
,? @
UserId 
= 
$str ?
} 
) 
; 
} 	
} 
} æ!
gC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Identity\IdentityServiceRegistration.cs
	namespace 	
CleanArchitecture
 
. 
Identity $
{ 
public 

static 
class '
IdentityServiceRegistration 3
{ 
public 
static 
IServiceCollection ($
ConfigureIdentityService) A
(A B
thisB F
IServiceCollectionG Y
servicesZ b
,b c
IConfigurationd r
configuration	s Ä
)
Ä Å
{ 	
services 
. 
	Configure 
< 
JwtSettings *
>* +
(+ ,
configuration, 9
.9 :

GetSection: D
(D E
$strE R
)R S
)S T
;T U
services 
. 
AddDbContext !
<! ".
"CleanArchitectureIdentityDbContext" D
>D E
(E F
optionsF M
=>N P
options 
. 
UseSqlServer $
($ %
configuration !
.! "
GetConnectionString" 5
(5 6
$str6 P
)P Q
,Q R
b 
=> 
b 
. 
MigrationsAssembly -
(- .
typeof. 4
(4 5.
"CleanArchitectureIdentityDbContext5 W
)W X
.X Y
AssemblyY a
.a b
FullNameb j
)j k
) 
) 
; 
services 
. 
AddIdentity  
<  !
ApplicationUser! 0
,0 1
IdentityRole2 >
>> ?
(? @
)@ A
. $
AddEntityFrameworkStores )
<) *.
"CleanArchitectureIdentityDbContext* L
>L M
(M N
)N O
. $
AddDefaultTokenProviders )
() *
)* +
;+ ,
services 
. 
AddTransient !
<! "
IAuthService" .
,. /
AuthService0 ;
>; <
(< =
)= >
;> ?
services!! 
.!! 
AddAuthentication!! &
(!!& '
options!!' .
=>!!/ 1
{"" 
options## 
.## %
DefaultAuthenticateScheme## 1
=##2 3
JwtBearerDefaults##4 E
.##E F 
AuthenticationScheme##F Z
;##Z [
options$$ 
.$$ "
DefaultChallengeScheme$$ .
=$$/ 0
JwtBearerDefaults$$1 B
.$$B C 
AuthenticationScheme$$C W
;$$W X
}%% 
)%% 
.%% 
AddJwtBearer%% 
(%% 
options%% #
=>%%$ &
{&& 
options'' 
.'' %
TokenValidationParameters'' 1
=''2 3
new''4 7%
TokenValidationParameters''8 Q
{(( $
ValidateIssuerSigningKey)) ,
=))- .
true))/ 3
,))3 4
ValidateIssuer** "
=**# $
true**% )
,**) *
ValidateAudience++ $
=++% &
true++' +
,+++ ,
ValidateLifetime,, $
=,,% &
true,,' +
,,,+ ,
	ClockSkew-- 
=-- 
TimeSpan--  (
.--( )
Zero--) -
,--- .
ValidIssuer.. 
=..  !
configuration.." /
[../ 0
$str..0 D
]..D E
,..E F
ValidAudience// !
=//" #
configuration//$ 1
[//1 2
$str//2 H
]//H I
,//I J
IssuerSigningKey00 $
=00% &
new00' * 
SymmetricSecurityKey00+ ?
(00? @
Encoding00@ H
.00H I
UTF800I M
.00M N
GetBytes00N V
(00V W
configuration00W d
[00d e
$str00e v
]00v w
)00w x
)00x y
}11 
;11 
}22 
)22 
;22 
return44 
services44 
;44 
}55 	
}66 
}77 ø
tC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Identity\Migrations\20221009181302_GenerateTables.cs
	namespace 	
CleanArchitecture
 
. 
Identity $
.$ %

Migrations% /
{ 
public 

partial 
class 
GenerateTables '
:( )
	Migration* 3
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
type. 2
:2 3
$str4 C
,C D
nullableE M
:M N
falseO T
)T U
,U V
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
	maxLengthG P
:P Q
$numR U
,U V
nullableW _
:_ `
truea e
)e f
,f g
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ O
,O P
	maxLengthQ Z
:Z [
$num\ _
,_ `
nullablea i
:i j
truek o
)o p
,p q
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
type< @
:@ A
$strB Q
,Q R
nullableS [
:[ \
true] a
)a b
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
type. 2
:2 3
$str4 C
,C D
nullableE M
:M N
falseO T
)T U
,U V
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
falseS X
)X Y
,Y Z
	Apellidos   
=   
table    %
.  % &
Column  & ,
<  , -
string  - 3
>  3 4
(  4 5
type  5 9
:  9 :
$str  ; J
,  J K
nullable  L T
:  T U
false  V [
)  [ \
,  \ ]
UserName!! 
=!! 
table!! $
.!!$ %
Column!!% +
<!!+ ,
string!!, 2
>!!2 3
(!!3 4
type!!4 8
:!!8 9
$str!!: I
,!!I J
	maxLength!!K T
:!!T U
$num!!V Y
,!!Y Z
nullable!![ c
:!!c d
true!!e i
)!!i j
,!!j k
NormalizedUserName"" &
=""' (
table"") .
."". /
Column""/ 5
<""5 6
string""6 <
>""< =
(""= >
type""> B
:""B C
$str""D S
,""S T
	maxLength""U ^
:""^ _
$num""` c
,""c d
nullable""e m
:""m n
true""o s
)""s t
,""t u
Email## 
=## 
table## !
.##! "
Column##" (
<##( )
string##) /
>##/ 0
(##0 1
type##1 5
:##5 6
$str##7 F
,##F G
	maxLength##H Q
:##Q R
$num##S V
,##V W
nullable##X `
:##` a
true##b f
)##f g
,##g h
NormalizedEmail$$ #
=$$$ %
table$$& +
.$$+ ,
Column$$, 2
<$$2 3
string$$3 9
>$$9 :
($$: ;
type$$; ?
:$$? @
$str$$A P
,$$P Q
	maxLength$$R [
:$$[ \
$num$$] `
,$$` a
nullable$$b j
:$$j k
true$$l p
)$$p q
,$$q r
EmailConfirmed%% "
=%%# $
table%%% *
.%%* +
Column%%+ 1
<%%1 2
bool%%2 6
>%%6 7
(%%7 8
type%%8 <
:%%< =
$str%%> C
,%%C D
nullable%%E M
:%%M N
false%%O T
)%%T U
,%%U V
PasswordHash&&  
=&&! "
table&&# (
.&&( )
Column&&) /
<&&/ 0
string&&0 6
>&&6 7
(&&7 8
type&&8 <
:&&< =
$str&&> M
,&&M N
nullable&&O W
:&&W X
true&&Y ]
)&&] ^
,&&^ _
SecurityStamp'' !
=''" #
table''$ )
.'') *
Column''* 0
<''0 1
string''1 7
>''7 8
(''8 9
type''9 =
:''= >
$str''? N
,''N O
nullable''P X
:''X Y
true''Z ^
)''^ _
,''_ `
ConcurrencyStamp(( $
=((% &
table((' ,
.((, -
Column((- 3
<((3 4
string((4 :
>((: ;
(((; <
type((< @
:((@ A
$str((B Q
,((Q R
nullable((S [
:(([ \
true((] a
)((a b
,((b c
PhoneNumber)) 
=))  !
table))" '
.))' (
Column))( .
<)). /
string))/ 5
>))5 6
())6 7
type))7 ;
:)); <
$str))= L
,))L M
nullable))N V
:))V W
true))X \
)))\ ]
,))] ^ 
PhoneNumberConfirmed** (
=**) *
table**+ 0
.**0 1
Column**1 7
<**7 8
bool**8 <
>**< =
(**= >
type**> B
:**B C
$str**D I
,**I J
nullable**K S
:**S T
false**U Z
)**Z [
,**[ \
TwoFactorEnabled++ $
=++% &
table++' ,
.++, -
Column++- 3
<++3 4
bool++4 8
>++8 9
(++9 :
type++: >
:++> ?
$str++@ E
,++E F
nullable++G O
:++O P
false++Q V
)++V W
,++W X

LockoutEnd,, 
=,,  
table,,! &
.,,& '
Column,,' -
<,,- .
DateTimeOffset,,. <
>,,< =
(,,= >
type,,> B
:,,B C
$str,,D T
,,,T U
nullable,,V ^
:,,^ _
true,,` d
),,d e
,,,e f
LockoutEnabled-- "
=--# $
table--% *
.--* +
Column--+ 1
<--1 2
bool--2 6
>--6 7
(--7 8
type--8 <
:--< =
$str--> C
,--C D
nullable--E M
:--M N
false--O T
)--T U
,--U V
AccessFailedCount.. %
=..& '
table..( -
...- .
Column... 4
<..4 5
int..5 8
>..8 9
(..9 :
type..: >
:..> ?
$str..@ E
,..E F
nullable..G O
:..O P
false..Q V
)..V W
}// 
,// 
constraints00 
:00 
table00 "
=>00# %
{11 
table22 
.22 

PrimaryKey22 $
(22$ %
$str22% 5
,225 6
x227 8
=>229 ;
x22< =
.22= >
Id22> @
)22@ A
;22A B
}33 
)33 
;33 
migrationBuilder55 
.55 
CreateTable55 (
(55( )
name66 
:66 
$str66 (
,66( )
columns77 
:77 
table77 
=>77 !
new77" %
{88 
Id99 
=99 
table99 
.99 
Column99 %
<99% &
int99& )
>99) *
(99* +
type99+ /
:99/ 0
$str991 6
,996 7
nullable998 @
:99@ A
false99B G
)99G H
.:: 

Annotation:: #
(::# $
$str::$ 8
,::8 9
$str::: @
)::@ A
,::A B
RoleId;; 
=;; 
table;; "
.;;" #
Column;;# )
<;;) *
string;;* 0
>;;0 1
(;;1 2
type;;2 6
:;;6 7
$str;;8 G
,;;G H
nullable;;I Q
:;;Q R
false;;S X
);;X Y
,;;Y Z
	ClaimType<< 
=<< 
table<<  %
.<<% &
Column<<& ,
<<<, -
string<<- 3
><<3 4
(<<4 5
type<<5 9
:<<9 :
$str<<; J
,<<J K
nullable<<L T
:<<T U
true<<V Z
)<<Z [
,<<[ \

ClaimValue== 
===  
table==! &
.==& '
Column==' -
<==- .
string==. 4
>==4 5
(==5 6
type==6 :
:==: ;
$str==< K
,==K L
nullable==M U
:==U V
true==W [
)==[ \
}>> 
,>> 
constraints?? 
:?? 
table?? "
=>??# %
{@@ 
tableAA 
.AA 

PrimaryKeyAA $
(AA$ %
$strAA% :
,AA: ;
xAA< =
=>AA> @
xAAA B
.AAB C
IdAAC E
)AAE F
;AAF G
tableBB 
.BB 

ForeignKeyBB $
(BB$ %
nameCC 
:CC 
$strCC F
,CCF G
columnDD 
:DD 
xDD  !
=>DD" $
xDD% &
.DD& '
RoleIdDD' -
,DD- .
principalTableEE &
:EE& '
$strEE( 5
,EE5 6
principalColumnFF '
:FF' (
$strFF) -
,FF- .
onDeleteGG  
:GG  !
ReferentialActionGG" 3
.GG3 4
CascadeGG4 ;
)GG; <
;GG< =
}HH 
)HH 
;HH 
migrationBuilderJJ 
.JJ 
CreateTableJJ (
(JJ( )
nameKK 
:KK 
$strKK (
,KK( )
columnsLL 
:LL 
tableLL 
=>LL !
newLL" %
{MM 
IdNN 
=NN 
tableNN 
.NN 
ColumnNN %
<NN% &
intNN& )
>NN) *
(NN* +
typeNN+ /
:NN/ 0
$strNN1 6
,NN6 7
nullableNN8 @
:NN@ A
falseNNB G
)NNG H
.OO 

AnnotationOO #
(OO# $
$strOO$ 8
,OO8 9
$strOO: @
)OO@ A
,OOA B
UserIdPP 
=PP 
tablePP "
.PP" #
ColumnPP# )
<PP) *
stringPP* 0
>PP0 1
(PP1 2
typePP2 6
:PP6 7
$strPP8 G
,PPG H
nullablePPI Q
:PPQ R
falsePPS X
)PPX Y
,PPY Z
	ClaimTypeQQ 
=QQ 
tableQQ  %
.QQ% &
ColumnQQ& ,
<QQ, -
stringQQ- 3
>QQ3 4
(QQ4 5
typeQQ5 9
:QQ9 :
$strQQ; J
,QQJ K
nullableQQL T
:QQT U
trueQQV Z
)QQZ [
,QQ[ \

ClaimValueRR 
=RR  
tableRR! &
.RR& '
ColumnRR' -
<RR- .
stringRR. 4
>RR4 5
(RR5 6
typeRR6 :
:RR: ;
$strRR< K
,RRK L
nullableRRM U
:RRU V
trueRRW [
)RR[ \
}SS 
,SS 
constraintsTT 
:TT 
tableTT "
=>TT# %
{UU 
tableVV 
.VV 

PrimaryKeyVV $
(VV$ %
$strVV% :
,VV: ;
xVV< =
=>VV> @
xVVA B
.VVB C
IdVVC E
)VVE F
;VVF G
tableWW 
.WW 

ForeignKeyWW $
(WW$ %
nameXX 
:XX 
$strXX F
,XXF G
columnYY 
:YY 
xYY  !
=>YY" $
xYY% &
.YY& '
UserIdYY' -
,YY- .
principalTableZZ &
:ZZ& '
$strZZ( 5
,ZZ5 6
principalColumn[[ '
:[[' (
$str[[) -
,[[- .
onDelete\\  
:\\  !
ReferentialAction\\" 3
.\\3 4
Cascade\\4 ;
)\\; <
;\\< =
}]] 
)]] 
;]] 
migrationBuilder__ 
.__ 
CreateTable__ (
(__( )
name`` 
:`` 
$str`` (
,``( )
columnsaa 
:aa 
tableaa 
=>aa !
newaa" %
{bb 
LoginProvidercc !
=cc" #
tablecc$ )
.cc) *
Columncc* 0
<cc0 1
stringcc1 7
>cc7 8
(cc8 9
typecc9 =
:cc= >
$strcc? N
,ccN O
nullableccP X
:ccX Y
falseccZ _
)cc_ `
,cc` a
ProviderKeydd 
=dd  !
tabledd" '
.dd' (
Columndd( .
<dd. /
stringdd/ 5
>dd5 6
(dd6 7
typedd7 ;
:dd; <
$strdd= L
,ddL M
nullableddN V
:ddV W
falseddX ]
)dd] ^
,dd^ _
ProviderDisplayNameee '
=ee( )
tableee* /
.ee/ 0
Columnee0 6
<ee6 7
stringee7 =
>ee= >
(ee> ?
typeee? C
:eeC D
$streeE T
,eeT U
nullableeeV ^
:ee^ _
trueee` d
)eed e
,eee f
UserIdff 
=ff 
tableff "
.ff" #
Columnff# )
<ff) *
stringff* 0
>ff0 1
(ff1 2
typeff2 6
:ff6 7
$strff8 G
,ffG H
nullableffI Q
:ffQ R
falseffS X
)ffX Y
}gg 
,gg 
constraintshh 
:hh 
tablehh "
=>hh# %
{ii 
tablejj 
.jj 

PrimaryKeyjj $
(jj$ %
$strjj% :
,jj: ;
xjj< =
=>jj> @
newjjA D
{jjE F
xjjG H
.jjH I
LoginProviderjjI V
,jjV W
xjjX Y
.jjY Z
ProviderKeyjjZ e
}jjf g
)jjg h
;jjh i
tablekk 
.kk 

ForeignKeykk $
(kk$ %
namell 
:ll 
$strll F
,llF G
columnmm 
:mm 
xmm  !
=>mm" $
xmm% &
.mm& '
UserIdmm' -
,mm- .
principalTablenn &
:nn& '
$strnn( 5
,nn5 6
principalColumnoo '
:oo' (
$stroo) -
,oo- .
onDeletepp  
:pp  !
ReferentialActionpp" 3
.pp3 4
Cascadepp4 ;
)pp; <
;pp< =
}qq 
)qq 
;qq 
migrationBuilderss 
.ss 
CreateTabless (
(ss( )
namett 
:tt 
$strtt '
,tt' (
columnsuu 
:uu 
tableuu 
=>uu !
newuu" %
{vv 
UserIdww 
=ww 
tableww "
.ww" #
Columnww# )
<ww) *
stringww* 0
>ww0 1
(ww1 2
typeww2 6
:ww6 7
$strww8 G
,wwG H
nullablewwI Q
:wwQ R
falsewwS X
)wwX Y
,wwY Z
RoleIdxx 
=xx 
tablexx "
.xx" #
Columnxx# )
<xx) *
stringxx* 0
>xx0 1
(xx1 2
typexx2 6
:xx6 7
$strxx8 G
,xxG H
nullablexxI Q
:xxQ R
falsexxS X
)xxX Y
}yy 
,yy 
constraintszz 
:zz 
tablezz "
=>zz# %
{{{ 
table|| 
.|| 

PrimaryKey|| $
(||$ %
$str||% 9
,||9 :
x||; <
=>||= ?
new||@ C
{||D E
x||F G
.||G H
UserId||H N
,||N O
x||P Q
.||Q R
RoleId||R X
}||Y Z
)||Z [
;||[ \
table}} 
.}} 

ForeignKey}} $
(}}$ %
name~~ 
:~~ 
$str~~ E
,~~E F
column 
: 
x  !
=>" $
x% &
.& '
RoleId' -
,- .
principalTable
ÄÄ &
:
ÄÄ& '
$str
ÄÄ( 5
,
ÄÄ5 6
principalColumn
ÅÅ '
:
ÅÅ' (
$str
ÅÅ) -
,
ÅÅ- .
onDelete
ÇÇ  
:
ÇÇ  !
ReferentialAction
ÇÇ" 3
.
ÇÇ3 4
Cascade
ÇÇ4 ;
)
ÇÇ; <
;
ÇÇ< =
table
ÉÉ 
.
ÉÉ 

ForeignKey
ÉÉ $
(
ÉÉ$ %
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ E
,
ÑÑE F
column
ÖÖ 
:
ÖÖ 
x
ÖÖ  !
=>
ÖÖ" $
x
ÖÖ% &
.
ÖÖ& '
UserId
ÖÖ' -
,
ÖÖ- .
principalTable
ÜÜ &
:
ÜÜ& '
$str
ÜÜ( 5
,
ÜÜ5 6
principalColumn
áá '
:
áá' (
$str
áá) -
,
áá- .
onDelete
àà  
:
àà  !
ReferentialAction
àà" 3
.
àà3 4
Cascade
àà4 ;
)
àà; <
;
àà< =
}
ââ 
)
ââ 
;
ââ 
migrationBuilder
ãã 
.
ãã 
CreateTable
ãã (
(
ãã( )
name
åå 
:
åå 
$str
åå (
,
åå( )
columns
çç 
:
çç 
table
çç 
=>
çç !
new
çç" %
{
éé 
UserId
èè 
=
èè 
table
èè "
.
èè" #
Column
èè# )
<
èè) *
string
èè* 0
>
èè0 1
(
èè1 2
type
èè2 6
:
èè6 7
$str
èè8 G
,
èèG H
nullable
èèI Q
:
èèQ R
false
èèS X
)
èèX Y
,
èèY Z
LoginProvider
êê !
=
êê" #
table
êê$ )
.
êê) *
Column
êê* 0
<
êê0 1
string
êê1 7
>
êê7 8
(
êê8 9
type
êê9 =
:
êê= >
$str
êê? N
,
êêN O
nullable
êêP X
:
êêX Y
false
êêZ _
)
êê_ `
,
êê` a
Name
ëë 
=
ëë 
table
ëë  
.
ëë  !
Column
ëë! '
<
ëë' (
string
ëë( .
>
ëë. /
(
ëë/ 0
type
ëë0 4
:
ëë4 5
$str
ëë6 E
,
ëëE F
nullable
ëëG O
:
ëëO P
false
ëëQ V
)
ëëV W
,
ëëW X
Value
íí 
=
íí 
table
íí !
.
íí! "
Column
íí" (
<
íí( )
string
íí) /
>
íí/ 0
(
íí0 1
type
íí1 5
:
íí5 6
$str
íí7 F
,
ííF G
nullable
ííH P
:
ííP Q
true
ííR V
)
ííV W
}
ìì 
,
ìì 
constraints
îî 
:
îî 
table
îî "
=>
îî# %
{
ïï 
table
ññ 
.
ññ 

PrimaryKey
ññ $
(
ññ$ %
$str
ññ% :
,
ññ: ;
x
ññ< =
=>
ññ> @
new
ññA D
{
ññE F
x
ññG H
.
ññH I
UserId
ññI O
,
ññO P
x
ññQ R
.
ññR S
LoginProvider
ññS `
,
ññ` a
x
ññb c
.
ññc d
Name
ññd h
}
ññi j
)
ññj k
;
ññk l
table
óó 
.
óó 

ForeignKey
óó $
(
óó$ %
name
òò 
:
òò 
$str
òò F
,
òòF G
column
ôô 
:
ôô 
x
ôô  !
=>
ôô" $
x
ôô% &
.
ôô& '
UserId
ôô' -
,
ôô- .
principalTable
öö &
:
öö& '
$str
öö( 5
,
öö5 6
principalColumn
õõ '
:
õõ' (
$str
õõ) -
,
õõ- .
onDelete
úú  
:
úú  !
ReferentialAction
úú" 3
.
úú3 4
Cascade
úú4 ;
)
úú; <
;
úú< =
}
ùù 
)
ùù 
;
ùù 
migrationBuilder
üü 
.
üü 

InsertData
üü '
(
üü' (
table
†† 
:
†† 
$str
†† $
,
††$ %
columns
°° 
:
°° 
new
°° 
[
°° 
]
°° 
{
°°  
$str
°°! %
,
°°% &
$str
°°' 9
,
°°9 :
$str
°°; A
,
°°A B
$str
°°C S
}
°°T U
,
°°U V
values
¢¢ 
:
¢¢ 
new
¢¢ 
object
¢¢ "
[
¢¢" #
,
¢¢# $
]
¢¢$ %
{
££ 
{
§§ 
$str
§§ <
,
§§< =
$str
§§> d
,
§§d e
$str
§§f u
,
§§u v
$str§§w Ü
}§§á à
,§§à â
{
•• 
$str
•• <
,
••< =
$str
••> d
,
••d e
$str
••f p
,
••p q
$str
••r |
}
••} ~
}
¶¶ 
)
¶¶ 
;
¶¶ 
migrationBuilder
®® 
.
®® 

InsertData
®® '
(
®®' (
table
©© 
:
©© 
$str
©© $
,
©©$ %
columns
™™ 
:
™™ 
new
™™ 
[
™™ 
]
™™ 
{
™™  
$str
™™! %
,
™™% &
$str
™™' :
,
™™: ;
$str
™™< G
,
™™G H
$str
™™I [
,
™™[ \
$str
™™] d
,
™™d e
$str
™™f v
,
™™v w
$str™™x à
,™™à â
$str™™ä ñ
,™™ñ ó
$str™™ò †
,™™† °
$str™™¢ ≥
,™™≥ ¥
$str™™µ …
,™™…  
$str™™À Ÿ
,™™Ÿ ⁄
$str™™€ Ë
,™™Ë È
$str™™Í Ä
,™™Ä Å
$str™™Ç ë
,™™ë í
$str™™ì •
,™™• ¶
$str™™ß ±
}™™≤ ≥
,™™≥ ¥
values
´´ 
:
´´ 
new
´´ 
object
´´ "
[
´´" #
,
´´# $
]
´´$ %
{
¨¨ 
{
≠≠ 
$str
≠≠ <
,
≠≠< =
$num
≠≠> ?
,
≠≠? @
$str
≠≠A G
,
≠≠G H
$str
≠≠I o
,
≠≠o p
$str≠≠q Ö
,≠≠Ö Ü
true≠≠á ã
,≠≠ã å
false≠≠ç í
,≠≠í ì
null≠≠î ò
,≠≠ò ô
$str≠≠ö †
,≠≠† °
$str≠≠¢ ∑
,≠≠∑ ∏
$str≠≠π ø
,≠≠ø ¿
$str≠≠¡ ó
,≠≠ó ò
null≠≠ô ù
,≠≠ù û
false≠≠ü §
,≠≠§ •
$str≠≠¶ Ã
,≠≠Ã Õ
false≠≠Œ ”
,≠≠” ‘
$str≠≠’ €
}≠≠‹ ›
,≠≠› ﬁ
{
ÆÆ 
$str
ÆÆ <
,
ÆÆ< =
$num
ÆÆ> ?
,
ÆÆ? @
$str
ÆÆA G
,
ÆÆG H
$str
ÆÆI o
,
ÆÆo p
$strÆÆq Ü
,ÆÆÜ á
trueÆÆà å
,ÆÆå ç
falseÆÆé ì
,ÆÆì î
nullÆÆï ô
,ÆÆô ö
$strÆÆõ §
,ÆÆ§ •
$strÆÆ¶ ª
,ÆÆª º
$strÆÆΩ ∆
,ÆÆ∆ «
$strÆÆ» û
,ÆÆû ü
nullÆÆ† §
,ÆÆ§ •
falseÆÆ¶ ´
,ÆÆ´ ¨
$strÆÆ≠ ”
,ÆÆ” ‘
falseÆÆ’ ⁄
,ÆÆ⁄ €
$strÆÆ‹ Â
}ÆÆÊ Á
}
ØØ 
)
ØØ 
;
ØØ 
migrationBuilder
±± 
.
±± 

InsertData
±± '
(
±±' (
table
≤≤ 
:
≤≤ 
$str
≤≤ (
,
≤≤( )
columns
≥≥ 
:
≥≥ 
new
≥≥ 
[
≥≥ 
]
≥≥ 
{
≥≥  
$str
≥≥! )
,
≥≥) *
$str
≥≥+ 3
}
≥≥4 5
,
≥≥5 6
values
¥¥ 
:
¥¥ 
new
¥¥ 
object
¥¥ "
[
¥¥" #
]
¥¥# $
{
¥¥% &
$str
¥¥' M
,
¥¥M N
$str
¥¥O u
}
¥¥v w
)
¥¥w x
;
¥¥x y
migrationBuilder
∂∂ 
.
∂∂ 

InsertData
∂∂ '
(
∂∂' (
table
∑∑ 
:
∑∑ 
$str
∑∑ (
,
∑∑( )
columns
∏∏ 
:
∏∏ 
new
∏∏ 
[
∏∏ 
]
∏∏ 
{
∏∏  
$str
∏∏! )
,
∏∏) *
$str
∏∏+ 3
}
∏∏4 5
,
∏∏5 6
values
ππ 
:
ππ 
new
ππ 
object
ππ "
[
ππ" #
]
ππ# $
{
ππ% &
$str
ππ' M
,
ππM N
$str
ππO u
}
ππv w
)
ππw x
;
ππx y
migrationBuilder
ªª 
.
ªª 
CreateIndex
ªª (
(
ªª( )
name
ºº 
:
ºº 
$str
ºº 2
,
ºº2 3
table
ΩΩ 
:
ΩΩ 
$str
ΩΩ )
,
ΩΩ) *
column
ææ 
:
ææ 
$str
ææ  
)
ææ  !
;
ææ! "
migrationBuilder
¿¿ 
.
¿¿ 
CreateIndex
¿¿ (
(
¿¿( )
name
¡¡ 
:
¡¡ 
$str
¡¡ %
,
¡¡% &
table
¬¬ 
:
¬¬ 
$str
¬¬ $
,
¬¬$ %
column
√√ 
:
√√ 
$str
√√ (
,
√√( )
unique
ƒƒ 
:
ƒƒ 
true
ƒƒ 
,
ƒƒ 
filter
≈≈ 
:
≈≈ 
$str
≈≈ 6
)
≈≈6 7
;
≈≈7 8
migrationBuilder
«« 
.
«« 
CreateIndex
«« (
(
««( )
name
»» 
:
»» 
$str
»» 2
,
»»2 3
table
…… 
:
…… 
$str
…… )
,
……) *
column
   
:
   
$str
    
)
    !
;
  ! "
migrationBuilder
ÃÃ 
.
ÃÃ 
CreateIndex
ÃÃ (
(
ÃÃ( )
name
ÕÕ 
:
ÕÕ 
$str
ÕÕ 2
,
ÕÕ2 3
table
ŒŒ 
:
ŒŒ 
$str
ŒŒ )
,
ŒŒ) *
column
œœ 
:
œœ 
$str
œœ  
)
œœ  !
;
œœ! "
migrationBuilder
—— 
.
—— 
CreateIndex
—— (
(
——( )
name
““ 
:
““ 
$str
““ 1
,
““1 2
table
”” 
:
”” 
$str
”” (
,
””( )
column
‘‘ 
:
‘‘ 
$str
‘‘  
)
‘‘  !
;
‘‘! "
migrationBuilder
÷÷ 
.
÷÷ 
CreateIndex
÷÷ (
(
÷÷( )
name
◊◊ 
:
◊◊ 
$str
◊◊ "
,
◊◊" #
table
ÿÿ 
:
ÿÿ 
$str
ÿÿ $
,
ÿÿ$ %
column
ŸŸ 
:
ŸŸ 
$str
ŸŸ )
)
ŸŸ) *
;
ŸŸ* +
migrationBuilder
€€ 
.
€€ 
CreateIndex
€€ (
(
€€( )
name
‹‹ 
:
‹‹ 
$str
‹‹ %
,
‹‹% &
table
›› 
:
›› 
$str
›› $
,
››$ %
column
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ ,
,
ﬁﬁ, -
unique
ﬂﬂ 
:
ﬂﬂ 
true
ﬂﬂ 
,
ﬂﬂ 
filter
‡‡ 
:
‡‡ 
$str
‡‡ :
)
‡‡: ;
;
‡‡; <
}
·· 	
	protected
„„ 
override
„„ 
void
„„ 
Down
„„  $
(
„„$ %
MigrationBuilder
„„% 5
migrationBuilder
„„6 F
)
„„F G
{
‰‰ 	
migrationBuilder
ÂÂ 
.
ÂÂ 
	DropTable
ÂÂ &
(
ÂÂ& '
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ (
)
ÊÊ( )
;
ÊÊ) *
migrationBuilder
ËË 
.
ËË 
	DropTable
ËË &
(
ËË& '
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ (
)
ÈÈ( )
;
ÈÈ) *
migrationBuilder
ÎÎ 
.
ÎÎ 
	DropTable
ÎÎ &
(
ÎÎ& '
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ (
)
ÏÏ( )
;
ÏÏ) *
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ '
)
ÔÔ' (
;
ÔÔ( )
migrationBuilder
ÒÒ 
.
ÒÒ 
	DropTable
ÒÒ &
(
ÒÒ& '
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ (
)
ÚÚ( )
;
ÚÚ) *
migrationBuilder
ÙÙ 
.
ÙÙ 
	DropTable
ÙÙ &
(
ÙÙ& '
name
ıı 
:
ıı 
$str
ıı #
)
ıı# $
;
ıı$ %
migrationBuilder
˜˜ 
.
˜˜ 
	DropTable
˜˜ &
(
˜˜& '
name
¯¯ 
:
¯¯ 
$str
¯¯ #
)
¯¯# $
;
¯¯$ %
}
˘˘ 	
}
˙˙ 
}˚˚ ‰
bC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Identity\Models\ApplicationUser.cs
	namespace 	
CleanArchitecture
 
. 
Identity $
.$ %
Models% +
{ 
public 

class 
ApplicationUser  
:  !
IdentityUser" .
{ 
public 
string 
Nombre 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
	Apellidos 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
string0 6
.6 7
Empty7 <
;< =
}		 
}

 ÓX
`C:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Identity\Services\AuthService.cs
	namespace 	
CleanArchitecture
 
. 
Identity $
.$ %
Services% -
{ 
public 

class 
AuthService 
: 
IAuthService +
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
private 
readonly 
SignInManager &
<& '
ApplicationUser' 6
>6 7
_singManager8 D
;D E
private 
readonly 
JwtSettings $
_jwtSettings% 1
;1 2
public 
AuthService 
( 
UserManager &
<& '
ApplicationUser' 6
>6 7
userManager8 C
,C D
SignInManagerE R
<R S
ApplicationUserS b
>b c
singManagerd o
,o p
IOptionsq y
<y z
JwtSettings	z Ö
>
Ö Ü
jwtSettings
á í
)
í ì
{ 	
_userManager 
= 
userManager &
;& '
_singManager 
= 
singManager &
;& '
_jwtSettings 
= 
jwtSettings &
.& '
Value' ,
;, -
} 	
public 
async 
Task 
< 
AuthResponse &
>& '
Login( -
(- .
AuthRequest. 9
request: A
)A B
{ 	
var 
user 
= 
await 
_userManager )
.) *
FindByEmailAsync* :
(: ;
request; B
.B C
EmailC H
)H I
;I J
if 
( 
user 
== 
null 
) 
{ 
throw   
new   
	Exception   #
(  # $
$"  $ &
$str  & ;
{  ; <
request  < C
.  C D
Email  D I
}  I J
$str  J U
"  U V
)  V W
;  W X
}!! 
var(( 
result(( 
=(( 
await(( 
_singManager(( +
.((+ ,
PasswordSignInAsync((, ?
(((? @
user((@ D
.((D E
UserName((E M
,((M N
request((O V
.((V W
Password((W _
,((_ `
false((a f
,((f g
lockoutOnFailure((h x
:((x y
false((z 
)	(( Ä
;
((Ä Å
if)) 
()) 
!)) 
result)) 
.)) 
	Succeeded)) !
)))! "
{** 
throw++ 
new++ 
	Exception++ #
(++# $
$"++$ &
$str++& F
"++F G
)++G H
;++H I
},, 
var.. 
tokenGenerated.. 
=..  
await..! &
GenerateToken..' 4
(..4 5
user..5 9
)..9 :
;..: ;
var00 
authResponse00 
=00 
new00 "
AuthResponse00# /
{11 
Id22 
=22 
user22 
.22 
Id22 
,22 
Token33 
=33 
new33 #
JwtSecurityTokenHandler33 3
(333 4
)334 5
.335 6

WriteToken336 @
(33@ A
tokenGenerated33A O
)33O P
,33P Q
Email44 
=44 
user44 
.44 
Email44 "
,44" #
UserName55 
=55 
user55 
.55  
UserName55  (
}66 
;66 
return88 
authResponse88 
;88  
}:: 	
public<< 
async<< 
Task<< 
<<<  
RegistrationResponse<< .
><<. /
Register<<0 8
(<<8 9
RegistrationRequest<<9 L
request<<M T
)<<T U
{== 	
var>> 
existingUser>> 
=>> 
await>> $
_userManager>>% 1
.>>1 2
FindByNameAsync>>2 A
(>>A B
request>>B I
.>>I J
UserName>>J R
)>>R S
;>>S T
if?? 
(?? 
existingUser?? 
!=?? 
null?? #
)??# $
{@@ 
throwAA 
newAA 
	ExceptionAA #
(AA# $
$"AA$ &
$strAA& O
"AAO P
)AAP Q
;AAQ R
}BB 
varDD 
existingEmailDD 
=DD 
awaitDD  %
_userManagerDD& 2
.DD2 3
FindByEmailAsyncDD3 C
(DDC D
requestDDD K
.DDK L
EmailDDL Q
)DDQ R
;DDR S
ifEE 
(EE 
existingEmailEE 
!=EE 
nullEE  $
)EE$ %
{FF 
throwGG 
newGG 
	ExceptionGG #
(GG# $
$"GG$ &
$strGG& L
"GGL M
)GGM N
;GGN O
}HH 
varJJ 
userJJ 
=JJ 
newJJ 
ApplicationUserJJ *
{KK 
EmailLL 
=LL 
requestLL 
.LL  
EmailLL  %
,LL% &
NombreMM 
=MM 
requestMM  
.MM  !
NombreMM! '
,MM' (
	ApellidosNN 
=NN 
requestNN #
.NN# $
	ApellidosNN$ -
,NN- .
UserNameOO 
=OO 
requestOO "
.OO" #
UserNameOO# +
,OO+ ,
EmailConfirmedPP 
=PP  
truePP! %
}QQ 
;QQ 
varRR 
resultRR 
=RR 
awaitRR 
_userManagerRR +
.RR+ ,
CreateAsyncRR, 7
(RR7 8
userRR8 <
,RR< =
requestRR> E
.RRE F
PasswordRRF N
)RRN O
;RRO P
ifSS 
(SS 
resultSS 
.SS 
	SucceededSS  
)SS  !
{TT 
awaitUU 
_userManagerUU "
.UU" #
AddToRoleAsyncUU# 1
(UU1 2
userUU2 6
,UU6 7
$strUU8 B
)UUB C
;UUC D
varWW 
tokenGeneratedWW "
=WW# $
awaitWW% *
GenerateTokenWW+ 8
(WW8 9
userWW9 =
)WW= >
;WW> ?
returnXX 
newXX  
RegistrationResponseXX /
{YY 
EmailZZ 
=ZZ 
userZZ  
.ZZ  !
EmailZZ! &
,ZZ& '
Token[[ 
=[[ 
new[[ #
JwtSecurityTokenHandler[[  7
([[7 8
)[[8 9
.[[9 :

WriteToken[[: D
([[D E
tokenGenerated[[E S
)[[S T
,[[T U
UserId\\ 
=\\ 
user\\ !
.\\! "
Id\\" $
,\\$ %
UserName]] 
=]] 
user]] #
.]]# $
UserName]]$ ,
}^^ 
;^^ 
}__ 
throwaa 
newaa 
	Exceptionaa 
(aa  
$"aa  "
{aa" #
resultaa# )
.aa) *
Errorsaa* 0
}aa0 1
"aa1 2
)aa2 3
;aa3 4
}bb 	
privatecc 
asynccc 
Taskcc 
<cc 
JwtSecurityTokencc +
>cc+ ,
GenerateTokencc- :
(cc: ;
ApplicationUsercc; J
userccK O
)ccO P
{dd 	
varee 

userClaimsee 
=ee 
awaitee "
_userManageree# /
.ee/ 0
GetClaimsAsyncee0 >
(ee> ?
useree? C
)eeC D
;eeD E
varff 
rolesff 
=ff 
awaitff 
_userManagerff *
.ff* +
GetRolesAsyncff+ 8
(ff8 9
userff9 =
)ff= >
;ff> ?
varii 

roleClaimsii 
=ii 
newii  
Listii! %
<ii% &
Claimii& +
>ii+ ,
(ii, -
)ii- .
;ii. /
foreachjj 
(jj 
varjj 
rolejj 
injj 
rolesjj  %
)jj% &
{kk 

roleClaimsll 
.ll 
Addll 
(ll 
newll "
Claimll# (
(ll( )

ClaimTypesll) 3
.ll3 4
Rolell4 8
,ll8 9
rolell: >
)ll> ?
)ll? @
;ll@ A
}mm 
varpp 
claimspp 
=pp 
newpp 
[pp 
]pp 
{pp  
newrr 
Claimrr 
(rr #
JwtRegisteredClaimNamesrr 1
.rr1 2
Subrr2 5
,rr5 6
userrr7 ;
.rr; <
UserNamerr< D
)rrD E
,rrE F
newss 
Claimss 
(ss #
JwtRegisteredClaimNamesss 1
.ss1 2
Emailss2 7
,ss7 8
userss9 =
.ss= >
UserNamess> F
)ssF G
,ssG H
newtt 
Claimtt 
(tt 
CustomClaimTypestt *
.tt* +
Uidtt+ .
,tt. /
usertt0 4
.tt4 5
Idtt5 7
)tt7 8
}uu 
.uu 
Unionuu 
(uu 

userClaimsuu 
)uu 
.vv 
Unionvv 
(vv 

roleClaimsvv 
)vv 
;vv 
varxx 
symetricSecurityKeyxx #
=xx$ %
newxx& ) 
SymmetricSecurityKeyxx* >
(xx> ?
Encodingxx? G
.xxG H
UTF8xxH L
.xxL M
GetBytesxxM U
(xxU V
_jwtSettingsyy 
.yy 
Keyyy  
)zz 
)zz 
;zz 
var{{ 
signingCredentials{{ "
={{# $
new{{% (
SigningCredentials{{) ;
({{; <
symetricSecurityKey{{< O
,{{O P
SecurityAlgorithms{{Q c
.{{c d

HmacSha256{{d n
){{n o
;{{o p
var}} 
jwtSecurityToke}} 
=}}  !
new}}" %
JwtSecurityToken}}& 6
(}}6 7
issuer~~ 
:~~ 
_jwtSettings~~ #
.~~# $
Issuer~~$ *
,~~* +
audience 
: 
_jwtSettings '
.' (
Audience( 0
,0 1
claims
ÄÄ 
:
ÄÄ 
claims
ÄÄ 
,
ÄÄ 
expires
ÅÅ 
:
ÅÅ 
DateTime
ÅÅ !
.
ÅÅ! "
UtcNow
ÅÅ" (
.
ÅÅ( )

AddMinutes
ÅÅ) 3
(
ÅÅ3 4
_jwtSettings
ÅÅ4 @
.
ÅÅ@ A
DurationInMinutes
ÅÅA R
)
ÅÅR S
,
ÅÅS T 
signingCredentials
ÇÇ "
:
ÇÇ" # 
signingCredentials
ÇÇ# 5
)
ÉÉ 
;
ÉÉ 
return
ÖÖ 
jwtSecurityToke
ÖÖ "
;
ÖÖ" #
}
ÜÜ 	
}
áá 
}àà 