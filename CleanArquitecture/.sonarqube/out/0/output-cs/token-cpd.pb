ë
OC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Domain\Actor.cs
	namespace 	
CleanArchitecture
 
. 
Domain "
{ 
public 

class 
Actor 
: 
BaseDomainModel '
{ 
public		 
Actor		 
(		 
)		 
{		 
Videos

 
=

 
new

 
HashSet

  
<

  !
Video

! &
>

& '
(

' (
)

( )
;

) *
} 	
public 
string 
Nombre 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Apellido 
{  !
get" %
;% &
set' *
;* +
}, -
public 
virtual 
ICollection "
<" #
Video# (
>( )
Videos* 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} ´	
`C:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Domain\Common\BaseDomainModel.cs
	namespace 	
CleanArchitecture
 
. 
Domain "
." #
Common# )
{ 
public 

abstract 
class 
BaseDomainModel )
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
DateTime		 
?		 
CreatedDate		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
public

 
string

 
	CreatedBy

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
DateTime 
? 
LastModifiedDate )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string 
? 
LastModifiedBy %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} ô
\C:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Domain\Common\ValueObject.cs
	namespace 	
CleanArchitecture
 
. 
Domain "
." #
Common# )
{ 
public 

abstract 
class 
ValueObject %
{ 
	protected 
static 
bool 
EqualOperator +
(+ ,
ValueObject, 7
left8 <
,< =
ValueObject> I
rightJ O
)O P
{		 	
if

 
(

 
ReferenceEquals

 
(

  
left

  $
,

$ %
null

& *
)

* +
^

, -
ReferenceEquals

. =
(

= >
right

> C
,

C D
null

E I
)

I J
)

J K
{ 
return 
false 
; 
} 
return 
ReferenceEquals "
(" #
left# '
,' (
right) .
). /
||0 2
left3 7
.7 8
Equals8 >
(> ?
right? D
)D E
;E F
} 	
	protected 
static 
bool 
NotEqualOperator .
(. /
ValueObject/ :
left; ?
,? @
ValueObjectA L
rightM R
)R S
{ 	
return 
! 
( 
EqualOperator "
(" #
left# '
,' (
right) .
). /
)/ 0
;0 1
} 	
	protected 
abstract 
IEnumerable &
<& '
object' -
>- .!
GetEqualityComponents/ D
(D E
)E F
;F G
public 
override 
bool 
Equals #
(# $
object$ *
obj+ .
). /
{ 	
if 
( 
obj 
== 
null 
|| 
obj "
." #
GetType# *
(* +
)+ ,
!=- /
GetType0 7
(7 8
)8 9
)9 :
{ 
return 
false 
; 
} 
var 
other 
= 
( 
ValueObject $
)$ %
obj% (
;( )
return!! 
this!! 
.!! !
GetEqualityComponents!! -
(!!- .
)!!. /
.!!/ 0
SequenceEqual!!0 =
(!!= >
other!!> C
.!!C D!
GetEqualityComponents!!D Y
(!!Y Z
)!!Z [
)!![ \
;!!\ ]
}"" 	
public$$ 
override$$ 
int$$ 
GetHashCode$$ '
($$' (
)$$( )
{%% 	
return&& !
GetEqualityComponents&& (
(&&( )
)&&) *
.'' 
Select'' 
('' 
x'' 
=>'' 
x'' 
!='' !
null''" &
?''' (
x'') *
.''* +
GetHashCode''+ 6
(''6 7
)''7 8
:''9 :
$num''; <
)''< =
.(( 
	Aggregate(( 
((( 
((( 
x(( 
,(( 
y((  
)((  !
=>((" $
x((% &
^((' (
y(() *
)((* +
;((+ ,
})) 	
}++ 
},, Ç
RC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Domain\Director.cs
	namespace 	
CleanArchitecture
 
. 
Domain "
{ 
public 

class 
Director 
: 
BaseDomainModel *
{ 
public 
string 
Nombre 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
string		 
Apellido		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
int

 
VideoId

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
virtual 
Video 
video "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} Í
RC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Domain\Streamer.cs
	namespace 	
CleanArchitecture
 
. 
Domain "
{ 
public 

class 
Streamer 
: 
BaseDomainModel *
{ 
public 
string 
Nombre 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
string		 
Url		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public

 
ICollection

 
<

 
Video

  
>

  !
Videos

" (
{

) *
get

+ .
;

. /
set

0 3
;

3 4
}

5 6
} 
} Ò
OC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Domain\Video.cs
	namespace 	
CleanArchitecture
 
. 
Domain "
{ 
public 

class 
Video 
: 
BaseDomainModel '
{ 
public 
Video 
( 
) 
{ 
Actores		 
=		 
new		 
HashSet		 !
<		! "
Actor		" '
>		' (
(		( )
)		) *
;		* +
}

 	
public 
string 
Nombre 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 

StreamerId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
virtual 
Streamer 
Streamer  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
virtual 
ICollection "
<" #
Actor# (
>( )
Actores* 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
virtual 
Director 
Director  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} €
TC:\cursos\CleanArquitecture\CleanArquitecture\CleanArquitecture.Domain\VideoActor.cs
	namespace 	
CleanArchitecture
 
. 
Domain "
{ 
public 

class 

VideoActor 
: 
BaseDomainModel ,
{ 
public 
int 
VideoId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
ActorId 
{ 
get  
;  !
set" %
;% &
}' (
}		 
}

 